<Window x:Class="MVVM_Sample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:behaviors="clr-namespace:MVVM_Sample.Behavior"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MVVM_Sample.ViewModel"
        xmlns:common="clr-namespace:MVVM_Sample.Common"
        mc:Ignorable="d" FontSize="16" 
        WindowStartupLocation="CenterScreen"
        Background="{StaticResource BackBrush_GUI}"
        Title="MainWindow" Height="900" Width="1400">

    <Window.Resources>
        <!--Converter-->
        <common:MultiParamConverter x:Key="MultiParamConv" />
        <common:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />

        <!--  ListBoxItem Theme Item Style -->
        <Style TargetType="{x:Type ListBoxItem}" x:Key="ThemeItemStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid x:Name="itemContentGrid">
                            <Border Name="Border" Padding="1" SnapsToDevicePixels="true" Background="Transparent">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--選択状態によって強調表示する設定-->
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{DynamicResource SelectBrush}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{DynamicResource UnselectBrush}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  ListBoxItem Content Item Style -->
        <Style TargetType="{x:Type ListBoxItem}" x:Key="ContentItemStyle" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid x:Name="itemContentGrid">
                            <i:Interaction.Behaviors>
                                <behaviors:DragStartBehavior AllowedEffects="Copy" DragDropData="{Binding}" />
                            </i:Interaction.Behaviors>
                            <Border Name="Border" Padding="1" SnapsToDevicePixels="true" Background="Transparent">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--マウスオーバーによって強調表示する設定-->
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{DynamicResource SelectBrush}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter TargetName="Border" Property="BorderBrush" 
                                        Value="{DynamicResource UnselectBrush}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background" 
                                        Value="{StaticResource BackBrush_Light}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter TargetName="Border" Property="Background" 
                                        Value="{DynamicResource UnselectBrush}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ListBox ContentList Style-->
        <Style TargetType="{x:Type ListBox}" x:Key="ContentListStyle" >
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical" Margin="0">
                            <Border BorderThickness="0" BorderBrush="{StaticResource SelectBrush_Light}" Name="MovieBorder" Margin="0,1"
                                    Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}, AncestorLevel=1},Path=ActualWidth}">
                                <Grid Height="30">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="390"/>
                                        <ColumnDefinition Width="205"/>
                                        <ColumnDefinition Width="150"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="1" Text="{Binding PublishStatus}" TextAlignment="Left" Foreground="{StaticResource FrontBrush}" />
                                    <TextBlock Grid.Column="1" Margin="1,1,25,1" TextAlignment="Left" Foreground="{StaticResource FrontBrush}" Text="{Binding ContentlName}"
                                               TextTrimming="WordEllipsis" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}"/>
                                    <TextBlock Grid.Column="2" Margin="1" TextAlignment="Left" Foreground="{StaticResource FrontBrush}" >
                                        <Run Text="ID："/><Run Text="{Binding ContentlId}"/>
                                    </TextBlock>
                                    <TextBlock Grid.Column="3" Margin="1" TextAlignment="Left" Foreground="{StaticResource FrontBrush}">
                                        <Run Text="サイズ："/><Run Text="{Binding ContentlSize}"/>
                                    </TextBlock>
                                    <StatusBar Grid.Column="1" Grid.ColumnSpan="3" Background="Transparent" Panel.ZIndex="-1" >
                                        <StatusBarItem VerticalContentAlignment="Bottom">
                                            <ProgressBar Foreground="{StaticResource SelectBrush_Light}" Background="Transparent" Opacity="0.4" 
                                                         Height="2" Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType=StatusBarItem}}"
                                                         BorderThickness="0" Minimum="0.0" Maximum="100.0" Value="{Binding StatusValue}" Margin="0,0,0,4"/>
                                        </StatusBarItem>
                                    </StatusBar>
                                </Grid>
                            </Border>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ListBox ContentFreeList Style-->
        <Style TargetType="{x:Type ListBox}" x:Key="ContentFreeListStyle" >
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical" Margin="0">
                            <Border BorderThickness="0" BorderBrush="{StaticResource SelectBrush_Light}" Name="MovieBorder" Margin="0,1" 
                                    Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth}">
                                <Grid Height="30" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0"/>
                                        <ColumnDefinition Width="*" MinWidth="200"/>
                                        <ColumnDefinition Width="150"/>
                                        <ColumnDefinition Width="80"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="1" Margin="1,1,8,1"  Text="{Binding ContentlName}" TextAlignment="Left" Foreground="{StaticResource FrontBrush}" 
                                               TextTrimming="WordEllipsis" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}"/>
                                    <TextBlock Grid.Column="2" Margin="1" Text="{Binding ContentlId}" TextAlignment="Left" Foreground="{StaticResource FrontBrush}" />
                                    <TextBlock Grid.Column="3" Margin="1" Text="{Binding ContentlSize}"  TextAlignment="Left" Foreground="{StaticResource FrontBrush}"/>
                                </Grid>
                            </Border>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ListBox ThemeListStyle Style-->
        <Style TargetType="{x:Type ListBox}" x:Key="ThemeListStyle" >
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical" Margin="0"  >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="DragEnter">
                                    <i:InvokeCommandAction Command="{Binding DataContext.DoCommand,
                                                    RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}}}">
                                        <i:InvokeCommandAction.CommandParameter>
                                            <MultiBinding Converter="{StaticResource MultiParamConv}">
                                                <Binding Source="UpdateDrop"/>
                                                <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}"/>
                                            </MultiBinding>
                                        </i:InvokeCommandAction.CommandParameter>
                                    </i:InvokeCommandAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Border BorderThickness="0" BorderBrush="{StaticResource SelectBrush_Light}" Name="MovieBorder" Margin="0,4" 
                                    Padding="0,2,0,0" Background="{StaticResource BackBrush_Light}"
                                    Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth}">
                                <Grid >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="14"/>
                                        <ColumnDefinition Width="400"/>
                                        <ColumnDefinition Width="210"/>
                                        <ColumnDefinition Width="100"/>
                                        <ColumnDefinition Width="100"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="1" Margin="1" Text="{Binding ThemeName}" TextAlignment="Left" Foreground="{StaticResource SelectBrush_Light}" 
                                             Style="{StaticResource TextBlockBox}" Background="Transparent" IsReadOnly="False"/>
                                    <TextBox Grid.Column="2" Margin="1"  Text="{Binding ThemeKind}" TextAlignment="Left" Foreground="{StaticResource SelectBrush_Light}" 
                                             Style="{StaticResource TextBlockBox}" Background="Transparent"/>
                                    <TextBlock Grid.Column="3" Margin="1" Text="{Binding ArticleCount}"  TextAlignment="Left" Foreground="{StaticResource SelectBrush_Light}" />
                                    <TextBlock Grid.Column="4" Margin="1" Text="{Binding ImageCount}"  TextAlignment="Left" Foreground="{StaticResource SelectBrush_Light}" />
                                    <ListBox Grid.Row="1" Grid.ColumnSpan="5"  IsSynchronizedWithCurrentItem="True" 
                                             VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.IsVirtualizing="True"
                                             VirtualizingPanel.IsContainerVirtualizable="True" VirtualizingPanel.VirtualizationMode="Recycling"
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                             ScrollViewer.CanContentScroll="True" ScrollViewer.PanningMode="Both" ScrollViewer.IsDeferredScrollingEnabled="False"
                                             ItemsSource="{Binding ContentList, Mode=Default, UpdateSourceTrigger=PropertyChanged}" 
                                             Style="{StaticResource ContentListStyle}" ItemContainerStyle="{DynamicResource ContentItemStyle}">
                                    </ListBox>
                                </Grid>
                            </Border>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>

    <Grid>
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="80"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Row="0" Grid.ColumnSpan="2" Margin="5,10,5,0" BorderThickness="0" BorderBrush="SkyBlue">
                <UniformGrid Rows="1" >
                    <TextBlock Text="追加" Foreground="{StaticResource FrontBrush}" Background="{StaticResource BackBrush_Light}" 
                               VerticalAlignment="Center" TextAlignment="Center" Margin="3,0">
                        <TextBlock.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding DoCommand}" CommandParameter="AddTheme"/>
                        </TextBlock.InputBindings>
                    </TextBlock>
                    <TextBlock Text="削除" Foreground="{StaticResource FrontBrush}" Background="{StaticResource BackBrush_Light}" 
                               VerticalAlignment="Center" TextAlignment="Center" Margin="3,0">
                        <TextBlock.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding DoCommand}">
                                <MouseBinding.CommandParameter>
                                    <MultiBinding Converter="{StaticResource MultiParamConv}">
                                        <Binding Source="DeleteTheme"/>
                                        <Binding Path="SelectedItem" ElementName="ListBox_ThemeList"/>
                                    </MultiBinding>
                                </MouseBinding.CommandParameter>
                            </MouseBinding>
                        </TextBlock.InputBindings>
                    </TextBlock>
                    <TextBlock Text="出稿" Foreground="{StaticResource FrontBrush}" Background="{StaticResource BackBrush_Light}" 
                               VerticalAlignment="Center" TextAlignment="Center" Margin="3,0">
                        <TextBlock.InputBindings>
                            <MouseBinding MouseAction="LeftClick" Command="{Binding DoCommand}" CommandParameter="Publish"/>
                        </TextBlock.InputBindings>
                    </TextBlock>
                </UniformGrid>
            </Border>

            <Border Grid.Row="1" BorderThickness="0" Margin="3">
                <UniformGrid Columns="1" Margin="5">
                    <TextBlock Foreground="{Binding SelectedInfoModel.TextBlockForeground}">
                        <Run Text="テーマ名："/>
                        <Run Text="{Binding Path=SelectedItem.ThemeName, ElementName=ListBox_ThemeList}"/>
                    </TextBlock>
                    <TextBlock Foreground="{Binding SelectedInfoModel.TextBlockForeground}">
                        <Run Text="テーマ種別："/>
                        <Run Text="{Binding Path=SelectedItem.ThemeKind, ElementName=ListBox_ThemeList}"/>
                    </TextBlock>
                    <TextBlock Foreground="{Binding SelectedInfoModel.TextBlockForeground}">
                        <Run Text="登録日時："/>
                        <Run Text="{Binding Path=SelectedItem.InputDate, ElementName=ListBox_ThemeList}"/>
                    </TextBlock>
                </UniformGrid>
            </Border>

            <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="1" Margin="5" BorderThickness="0" BorderBrush="LightPink" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="20,7,24,0" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="400"/>
                            <ColumnDefinition Width="210"/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="テーマ名" Foreground="{StaticResource SelectBrush}"></TextBlock>
                        <TextBlock Grid.Column="1" Text="テーマ種別" Foreground="{StaticResource SelectBrush}"></TextBlock>
                        <TextBlock Grid.Column="2" Text="記事数" Foreground="{StaticResource SelectBrush}"></TextBlock>
                        <TextBlock Grid.Column="3" Text="画像数" Foreground="{StaticResource SelectBrush}"></TextBlock>
                    </Grid>
                    <Border Grid.Row="1">
                        <ListBox Name="ListBox_ThemeList" IsSynchronizedWithCurrentItem="True" 
                                 VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.IsVirtualizing="True"
                                 VirtualizingPanel.IsContainerVirtualizable="True" VirtualizingPanel.VirtualizationMode="Recycling"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="True" ScrollViewer.PanningMode="Both" 
                                 ScrollViewer.IsDeferredScrollingEnabled="False"
                                 ItemsSource="{Binding ThemeList, Mode=Default, UpdateSourceTrigger=PropertyChanged}" 
                                 Style="{StaticResource ThemeListStyle}" ItemContainerStyle="{DynamicResource ThemeItemStyle}" AllowDrop="True">
                            <i:Interaction.Behaviors>
                                <behaviors:DragAcceptBehavior Description="{Binding Description}" />
                            </i:Interaction.Behaviors>
                        </ListBox>
                    </Border>
                </Grid>
            </Border>

            <Border Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="1" Margin="5" BorderThickness="0" BorderBrush="LightPink" >
                <common:ListBoxEx Grid.Row="1" Grid.ColumnSpan="5" IsSynchronizedWithCurrentItem="True" 
                         VirtualizingPanel.ScrollUnit="Pixel" VirtualizingPanel.IsVirtualizing="True"
                         VirtualizingPanel.IsContainerVirtualizable="True" VirtualizingPanel.VirtualizationMode="Recycling"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="True" ScrollViewer.PanningMode="Both" 
                         ScrollViewer.IsDeferredScrollingEnabled="False" SelectionMode="Extended"
                         ItemsSource="{Binding ContentFreeList, Mode=Default, UpdateSourceTrigger=PropertyChanged}" 
                         Style="{StaticResource ContentFreeListStyle}" ItemContainerStyle="{DynamicResource ContentItemStyle}" AllowDrop="True">
                    <i:Interaction.Behaviors>
                        <behaviors:DragAcceptBehavior Description="{Binding Description}" />
                    </i:Interaction.Behaviors>
                </common:ListBoxEx>
            </Border>

            <StatusBar Grid.Row="3" Grid.ColumnSpan="2" Background="{StaticResource BackBrush_Light}" Margin="2" >
                <StatusBarItem >
                    <StackPanel Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType=StatusBarItem}}">
                        <TextBlock Text="{Binding StatusModel.StatusMessage}" Style="{DynamicResource DefaultTextBlock}" 
                               Foreground="{StaticResource SelectBrush_Light}"/>
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>
</Window>
